package com.dbtw.models.standard;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AddressExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public AddressExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected AddressExample(AddressExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table address
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andStreet1IsNull() {
            addCriterion("street1 is null");
            return this;
        }

        public Criteria andStreet1IsNotNull() {
            addCriterion("street1 is not null");
            return this;
        }

        public Criteria andStreet1EqualTo(String value) {
            addCriterion("street1 =", value, "street1");
            return this;
        }

        public Criteria andStreet1NotEqualTo(String value) {
            addCriterion("street1 <>", value, "street1");
            return this;
        }

        public Criteria andStreet1GreaterThan(String value) {
            addCriterion("street1 >", value, "street1");
            return this;
        }

        public Criteria andStreet1GreaterThanOrEqualTo(String value) {
            addCriterion("street1 >=", value, "street1");
            return this;
        }

        public Criteria andStreet1LessThan(String value) {
            addCriterion("street1 <", value, "street1");
            return this;
        }

        public Criteria andStreet1LessThanOrEqualTo(String value) {
            addCriterion("street1 <=", value, "street1");
            return this;
        }

        public Criteria andStreet1Like(String value) {
            addCriterion("street1 like", value, "street1");
            return this;
        }

        public Criteria andStreet1NotLike(String value) {
            addCriterion("street1 not like", value, "street1");
            return this;
        }

        public Criteria andStreet1In(List<String> values) {
            addCriterion("street1 in", values, "street1");
            return this;
        }

        public Criteria andStreet1NotIn(List<String> values) {
            addCriterion("street1 not in", values, "street1");
            return this;
        }

        public Criteria andStreet1Between(String value1, String value2) {
            addCriterion("street1 between", value1, value2, "street1");
            return this;
        }

        public Criteria andStreet1NotBetween(String value1, String value2) {
            addCriterion("street1 not between", value1, value2, "street1");
            return this;
        }

        public Criteria andStreet2IsNull() {
            addCriterion("street2 is null");
            return this;
        }

        public Criteria andStreet2IsNotNull() {
            addCriterion("street2 is not null");
            return this;
        }

        public Criteria andStreet2EqualTo(String value) {
            addCriterion("street2 =", value, "street2");
            return this;
        }

        public Criteria andStreet2NotEqualTo(String value) {
            addCriterion("street2 <>", value, "street2");
            return this;
        }

        public Criteria andStreet2GreaterThan(String value) {
            addCriterion("street2 >", value, "street2");
            return this;
        }

        public Criteria andStreet2GreaterThanOrEqualTo(String value) {
            addCriterion("street2 >=", value, "street2");
            return this;
        }

        public Criteria andStreet2LessThan(String value) {
            addCriterion("street2 <", value, "street2");
            return this;
        }

        public Criteria andStreet2LessThanOrEqualTo(String value) {
            addCriterion("street2 <=", value, "street2");
            return this;
        }

        public Criteria andStreet2Like(String value) {
            addCriterion("street2 like", value, "street2");
            return this;
        }

        public Criteria andStreet2NotLike(String value) {
            addCriterion("street2 not like", value, "street2");
            return this;
        }

        public Criteria andStreet2In(List<String> values) {
            addCriterion("street2 in", values, "street2");
            return this;
        }

        public Criteria andStreet2NotIn(List<String> values) {
            addCriterion("street2 not in", values, "street2");
            return this;
        }

        public Criteria andStreet2Between(String value1, String value2) {
            addCriterion("street2 between", value1, value2, "street2");
            return this;
        }

        public Criteria andStreet2NotBetween(String value1, String value2) {
            addCriterion("street2 not between", value1, value2, "street2");
            return this;
        }

        public Criteria andStreet3IsNull() {
            addCriterion("street3 is null");
            return this;
        }

        public Criteria andStreet3IsNotNull() {
            addCriterion("street3 is not null");
            return this;
        }

        public Criteria andStreet3EqualTo(String value) {
            addCriterion("street3 =", value, "street3");
            return this;
        }

        public Criteria andStreet3NotEqualTo(String value) {
            addCriterion("street3 <>", value, "street3");
            return this;
        }

        public Criteria andStreet3GreaterThan(String value) {
            addCriterion("street3 >", value, "street3");
            return this;
        }

        public Criteria andStreet3GreaterThanOrEqualTo(String value) {
            addCriterion("street3 >=", value, "street3");
            return this;
        }

        public Criteria andStreet3LessThan(String value) {
            addCriterion("street3 <", value, "street3");
            return this;
        }

        public Criteria andStreet3LessThanOrEqualTo(String value) {
            addCriterion("street3 <=", value, "street3");
            return this;
        }

        public Criteria andStreet3Like(String value) {
            addCriterion("street3 like", value, "street3");
            return this;
        }

        public Criteria andStreet3NotLike(String value) {
            addCriterion("street3 not like", value, "street3");
            return this;
        }

        public Criteria andStreet3In(List<String> values) {
            addCriterion("street3 in", values, "street3");
            return this;
        }

        public Criteria andStreet3NotIn(List<String> values) {
            addCriterion("street3 not in", values, "street3");
            return this;
        }

        public Criteria andStreet3Between(String value1, String value2) {
            addCriterion("street3 between", value1, value2, "street3");
            return this;
        }

        public Criteria andStreet3NotBetween(String value1, String value2) {
            addCriterion("street3 not between", value1, value2, "street3");
            return this;
        }

        public Criteria andCityIsNull() {
            addCriterion("city is null");
            return this;
        }

        public Criteria andCityIsNotNull() {
            addCriterion("city is not null");
            return this;
        }

        public Criteria andCityEqualTo(String value) {
            addCriterion("city =", value, "city");
            return this;
        }

        public Criteria andCityNotEqualTo(String value) {
            addCriterion("city <>", value, "city");
            return this;
        }

        public Criteria andCityGreaterThan(String value) {
            addCriterion("city >", value, "city");
            return this;
        }

        public Criteria andCityGreaterThanOrEqualTo(String value) {
            addCriterion("city >=", value, "city");
            return this;
        }

        public Criteria andCityLessThan(String value) {
            addCriterion("city <", value, "city");
            return this;
        }

        public Criteria andCityLessThanOrEqualTo(String value) {
            addCriterion("city <=", value, "city");
            return this;
        }

        public Criteria andCityLike(String value) {
            addCriterion("city like", value, "city");
            return this;
        }

        public Criteria andCityNotLike(String value) {
            addCriterion("city not like", value, "city");
            return this;
        }

        public Criteria andCityIn(List<String> values) {
            addCriterion("city in", values, "city");
            return this;
        }

        public Criteria andCityNotIn(List<String> values) {
            addCriterion("city not in", values, "city");
            return this;
        }

        public Criteria andCityBetween(String value1, String value2) {
            addCriterion("city between", value1, value2, "city");
            return this;
        }

        public Criteria andCityNotBetween(String value1, String value2) {
            addCriterion("city not between", value1, value2, "city");
            return this;
        }

        public Criteria andZipIsNull() {
            addCriterion("zip is null");
            return this;
        }

        public Criteria andZipIsNotNull() {
            addCriterion("zip is not null");
            return this;
        }

        public Criteria andZipEqualTo(Integer value) {
            addCriterion("zip =", value, "zip");
            return this;
        }

        public Criteria andZipNotEqualTo(Integer value) {
            addCriterion("zip <>", value, "zip");
            return this;
        }

        public Criteria andZipGreaterThan(Integer value) {
            addCriterion("zip >", value, "zip");
            return this;
        }

        public Criteria andZipGreaterThanOrEqualTo(Integer value) {
            addCriterion("zip >=", value, "zip");
            return this;
        }

        public Criteria andZipLessThan(Integer value) {
            addCriterion("zip <", value, "zip");
            return this;
        }

        public Criteria andZipLessThanOrEqualTo(Integer value) {
            addCriterion("zip <=", value, "zip");
            return this;
        }

        public Criteria andZipIn(List<Integer> values) {
            addCriterion("zip in", values, "zip");
            return this;
        }

        public Criteria andZipNotIn(List<Integer> values) {
            addCriterion("zip not in", values, "zip");
            return this;
        }

        public Criteria andZipBetween(Integer value1, Integer value2) {
            addCriterion("zip between", value1, value2, "zip");
            return this;
        }

        public Criteria andZipNotBetween(Integer value1, Integer value2) {
            addCriterion("zip not between", value1, value2, "zip");
            return this;
        }

        public Criteria andPlus4IsNull() {
            addCriterion("plus4 is null");
            return this;
        }

        public Criteria andPlus4IsNotNull() {
            addCriterion("plus4 is not null");
            return this;
        }

        public Criteria andPlus4EqualTo(Integer value) {
            addCriterion("plus4 =", value, "plus4");
            return this;
        }

        public Criteria andPlus4NotEqualTo(Integer value) {
            addCriterion("plus4 <>", value, "plus4");
            return this;
        }

        public Criteria andPlus4GreaterThan(Integer value) {
            addCriterion("plus4 >", value, "plus4");
            return this;
        }

        public Criteria andPlus4GreaterThanOrEqualTo(Integer value) {
            addCriterion("plus4 >=", value, "plus4");
            return this;
        }

        public Criteria andPlus4LessThan(Integer value) {
            addCriterion("plus4 <", value, "plus4");
            return this;
        }

        public Criteria andPlus4LessThanOrEqualTo(Integer value) {
            addCriterion("plus4 <=", value, "plus4");
            return this;
        }

        public Criteria andPlus4In(List<Integer> values) {
            addCriterion("plus4 in", values, "plus4");
            return this;
        }

        public Criteria andPlus4NotIn(List<Integer> values) {
            addCriterion("plus4 not in", values, "plus4");
            return this;
        }

        public Criteria andPlus4Between(Integer value1, Integer value2) {
            addCriterion("plus4 between", value1, value2, "plus4");
            return this;
        }

        public Criteria andPlus4NotBetween(Integer value1, Integer value2) {
            addCriterion("plus4 not between", value1, value2, "plus4");
            return this;
        }

        public Criteria andStatesIdIsNull() {
            addCriterion("States_id is null");
            return this;
        }

        public Criteria andStatesIdIsNotNull() {
            addCriterion("States_id is not null");
            return this;
        }

        public Criteria andStatesIdEqualTo(Integer value) {
            addCriterion("States_id =", value, "statesId");
            return this;
        }

        public Criteria andStatesIdNotEqualTo(Integer value) {
            addCriterion("States_id <>", value, "statesId");
            return this;
        }

        public Criteria andStatesIdGreaterThan(Integer value) {
            addCriterion("States_id >", value, "statesId");
            return this;
        }

        public Criteria andStatesIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("States_id >=", value, "statesId");
            return this;
        }

        public Criteria andStatesIdLessThan(Integer value) {
            addCriterion("States_id <", value, "statesId");
            return this;
        }

        public Criteria andStatesIdLessThanOrEqualTo(Integer value) {
            addCriterion("States_id <=", value, "statesId");
            return this;
        }

        public Criteria andStatesIdIn(List<Integer> values) {
            addCriterion("States_id in", values, "statesId");
            return this;
        }

        public Criteria andStatesIdNotIn(List<Integer> values) {
            addCriterion("States_id not in", values, "statesId");
            return this;
        }

        public Criteria andStatesIdBetween(Integer value1, Integer value2) {
            addCriterion("States_id between", value1, value2, "statesId");
            return this;
        }

        public Criteria andStatesIdNotBetween(Integer value1, Integer value2) {
            addCriterion("States_id not between", value1, value2, "statesId");
            return this;
        }
    }
}