package com.dbtw.models.standard;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InvoiceitemsExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public InvoiceitemsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected InvoiceitemsExample(InvoiceitemsExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table invoiceitems
     *
     * @ibatorgenerated Thu May 27 15:19:22 MDT 2010
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andTableNameIsNull() {
            addCriterion("table_name is null");
            return this;
        }

        public Criteria andTableNameIsNotNull() {
            addCriterion("table_name is not null");
            return this;
        }

        public Criteria andTableNameEqualTo(String value) {
            addCriterion("table_name =", value, "tableName");
            return this;
        }

        public Criteria andTableNameNotEqualTo(String value) {
            addCriterion("table_name <>", value, "tableName");
            return this;
        }

        public Criteria andTableNameGreaterThan(String value) {
            addCriterion("table_name >", value, "tableName");
            return this;
        }

        public Criteria andTableNameGreaterThanOrEqualTo(String value) {
            addCriterion("table_name >=", value, "tableName");
            return this;
        }

        public Criteria andTableNameLessThan(String value) {
            addCriterion("table_name <", value, "tableName");
            return this;
        }

        public Criteria andTableNameLessThanOrEqualTo(String value) {
            addCriterion("table_name <=", value, "tableName");
            return this;
        }

        public Criteria andTableNameLike(String value) {
            addCriterion("table_name like", value, "tableName");
            return this;
        }

        public Criteria andTableNameNotLike(String value) {
            addCriterion("table_name not like", value, "tableName");
            return this;
        }

        public Criteria andTableNameIn(List<String> values) {
            addCriterion("table_name in", values, "tableName");
            return this;
        }

        public Criteria andTableNameNotIn(List<String> values) {
            addCriterion("table_name not in", values, "tableName");
            return this;
        }

        public Criteria andTableNameBetween(String value1, String value2) {
            addCriterion("table_name between", value1, value2, "tableName");
            return this;
        }

        public Criteria andTableNameNotBetween(String value1, String value2) {
            addCriterion("table_name not between", value1, value2, "tableName");
            return this;
        }

        public Criteria andTableKeyIsNull() {
            addCriterion("table_key is null");
            return this;
        }

        public Criteria andTableKeyIsNotNull() {
            addCriterion("table_key is not null");
            return this;
        }

        public Criteria andTableKeyEqualTo(Integer value) {
            addCriterion("table_key =", value, "tableKey");
            return this;
        }

        public Criteria andTableKeyNotEqualTo(Integer value) {
            addCriterion("table_key <>", value, "tableKey");
            return this;
        }

        public Criteria andTableKeyGreaterThan(Integer value) {
            addCriterion("table_key >", value, "tableKey");
            return this;
        }

        public Criteria andTableKeyGreaterThanOrEqualTo(Integer value) {
            addCriterion("table_key >=", value, "tableKey");
            return this;
        }

        public Criteria andTableKeyLessThan(Integer value) {
            addCriterion("table_key <", value, "tableKey");
            return this;
        }

        public Criteria andTableKeyLessThanOrEqualTo(Integer value) {
            addCriterion("table_key <=", value, "tableKey");
            return this;
        }

        public Criteria andTableKeyIn(List<Integer> values) {
            addCriterion("table_key in", values, "tableKey");
            return this;
        }

        public Criteria andTableKeyNotIn(List<Integer> values) {
            addCriterion("table_key not in", values, "tableKey");
            return this;
        }

        public Criteria andTableKeyBetween(Integer value1, Integer value2) {
            addCriterion("table_key between", value1, value2, "tableKey");
            return this;
        }

        public Criteria andTableKeyNotBetween(Integer value1, Integer value2) {
            addCriterion("table_key not between", value1, value2, "tableKey");
            return this;
        }

        public Criteria andInvoicesIdIsNull() {
            addCriterion("Invoices_id is null");
            return this;
        }

        public Criteria andInvoicesIdIsNotNull() {
            addCriterion("Invoices_id is not null");
            return this;
        }

        public Criteria andInvoicesIdEqualTo(Integer value) {
            addCriterion("Invoices_id =", value, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdNotEqualTo(Integer value) {
            addCriterion("Invoices_id <>", value, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdGreaterThan(Integer value) {
            addCriterion("Invoices_id >", value, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("Invoices_id >=", value, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdLessThan(Integer value) {
            addCriterion("Invoices_id <", value, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdLessThanOrEqualTo(Integer value) {
            addCriterion("Invoices_id <=", value, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdIn(List<Integer> values) {
            addCriterion("Invoices_id in", values, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdNotIn(List<Integer> values) {
            addCriterion("Invoices_id not in", values, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdBetween(Integer value1, Integer value2) {
            addCriterion("Invoices_id between", value1, value2, "invoicesId");
            return this;
        }

        public Criteria andInvoicesIdNotBetween(Integer value1, Integer value2) {
            addCriterion("Invoices_id not between", value1, value2, "invoicesId");
            return this;
        }
    }
}